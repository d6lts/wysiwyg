<?php
// $Id$


/**
 * Implementation of hook_install().
 */
function wysiwyg_editor_install() {
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      db_query("CREATE TABLE {wysiwyg_editor_profile} (
        name varchar(128) NOT NULL default '',
        settings text,
        plugin_count tinyint NOT NULL default '0',
        PRIMARY KEY (name)
      ) /*!40100 DEFAULT CHARACTER SET utf8 */");
      db_query("CREATE TABLE {wysiwyg_editor_role} (
        name varchar(128) NOT NULL default '',
        rid tinyint(3) unsigned NOT NULL default '0',
        PRIMARY KEY (name,rid)
      ) /*!40100 DEFAULT CHARACTER SET utf8 */");
      break;

    case 'pgsql':
      db_query("CREATE TABLE {wysiwyg_editor_profile} (
        name varchar(128) NOT NULL default '',
        settings text,
        plugin_count smallint NOT NULL default '0',
        PRIMARY KEY (name)
      )");
      db_query("CREATE TABLE {wysiwyg_editor_role} (
        name varchar(128) NOT NULL default '',
        rid smallint NOT NULL default '0',
        PRIMARY KEY (name,rid)
      )");
      break;
  }
  // Import data from old editor modules.
  wysiwyg_editor_migrate_tinymce();
}

/**
 * Implementation of hook_uninstall()
 */
function wysiwyg_editor_uninstall() {
  db_query('DROP TABLE {wysiwyg_editor_profile}');
  db_query('DROP TABLE {wysiwyg_editor_role}');
}

/**
 * Migrate from TinyMCE.
 */
function wysiwyg_editor_migrate_tinymce() {
  if (db_table_exists('tinymce_settings')) {
    $schema = db_result(db_query("SELECT schema_version FROM {system} WHERE name = 'tinymce'"));
    if ($schema >= 1) {
      // Import TinyMCE settings.
      db_query('INSERT INTO {wysiwyg_editor_profile} SELECT * FROM {tinymce_settings}');
      // Import TinyMCE profile role assignments.
      db_query('INSERT INTO {wysiwyg_editor_role} SELECT * FROM {tinymce_role}');

      // Disable TinyMCE module.
      module_disable(array('tinymce'));

      // Update configuration.
      wysiwyg_editor_update_5001();
    }
    else {
      drupal_set_message(t('To migrate your existing TinyMCE settings to Wysiwyg Editor, please update TinyMCE module to the latest official release, and re-install Wysiwyg Editor module.'));
    }
  }
}

/**
 * Add plugin_count to editor profiles.
 */
function wysiwyg_editor_update_5000() {
  $ret = array();
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      $ret[] = update_sql("ALTER TABLE {wysiwyg_editor_profile} ADD COLUMN plugin_count tinyint NOT NULL default '0'");
      break;

    case 'pgsql':
      db_add_column($ret, 'wysiwyg_editor_profile', 'plugin_count', 'smallint', array('not null' => TRUE, 'default' => "'0'"));
      break;
  }
  return $ret;
}

/**
 * Convert buttons and plugins into associative array and fix plugin count for old profiles.
 *
 * Note: This update is required for wysiwyg_editor_migrate_tinymce().
 */
function wysiwyg_editor_update_5001() {
  $ret = array();
  $profiles = db_query("SELECT name, settings, plugin_count FROM {wysiwyg_editor_profile}");
  while ($profile = db_fetch_array($profiles)) {
    $settings = unserialize($profile['settings']);
    if (isset($settings['form_id'])) {
      $old_buttons = $settings['buttons'];
      $settings['buttons'] = array();
      $plugin_count = 0;
      foreach ($old_buttons as $old_button => $enabled) {
        list($plugin, $button) = explode('-', $old_button, 2);
        $settings['buttons'][$plugin][$button] = 1;
        $plugin_count++;
      }
      // We can't use update_sql() here because of curly braces in serialized
      // array.
      db_query("UPDATE {wysiwyg_editor_profile} SET settings = '%s', plugin_count = %d WHERE name = '%s'", serialize($settings), $plugin_count, $profile['name']);
    }
  }
  return $ret;
}

